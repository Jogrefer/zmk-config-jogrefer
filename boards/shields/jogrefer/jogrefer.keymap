#include <behaviors.dtsi>
#include <definitions.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/bt.h>

/ {
	behaviors {
		&mt {
			tapping-term-ms = <200>;
		};
		&lt {
			tapping-term-ms = <200>;
		};
	};

	keymap {
		compatible = "zmk,keymap";
		retro-tap;

		default_layer {
			bindings = <
				/* ╭────────────────────╮   ╭────────────────────╮
					│  ×  1  2  3  4  5	│   │  6  7  8  9  0  \  │
					│  ⭾  F  M  N  G  X	╰───╯  W  V  B  P  Y  -  │
					│  ⇪  D  T  R  S  L  Ç   m  U  A  E  O  I  +	 │
					│  ´  Z  Q  H  C  K  [   <  Ñ  J  ,  .  /  ⇪  │
					│  m  ⌃  ⌥  ⌘  ␣  ←  ]   ⌘  ↩︎  ␣  ←  ↑  ↓  →  │
					╰─────────────────────────────────────────────╯ */
				&kp ESC              &kp N1     &kp N2    &kp N3    &kp N4     &kp N5                         &kp N6      &kp N7     &kp N8      &kp N9    &kp N0     &kp NUBS
				&kp TAB              &kp F      &kp M     &kp N     &kp G      &kp X                          &kp W       &kp V      &kp B       &kp P     &kp Y      &kp _MINUS
				&mt LSHIFT CAPSLOCK  &kp D      &kp T     &kp R     &kp S      &kp L    &kp TILDE  &tog 2     &kp U       &kp A      &kp E       &kp O     &kp I      &kp _PLUS
				&kp GRAVE            &kp Z      &kp Q     &kp H     &kp C      &kp K    &kp LBKT   &kp EQUAL  &kp NTILDE  &kp J      &kp _COMMA  &kp _DOT  &kp SLASH  &kp RSHIFT
				&lt 1 GLOBE          &kp LCTRL  &kp LALT  &kp LCMD  &kp SPACE  &kp DEL  &kp RBKT   &kp RCMD   &kp ENTER   &kp SPACE  &kp LEFT    &kp UP    &kp DOWN   &kp RIGHT
			>;
		};


		fn {		// 1
			bindings = <
				&trans  &kp &kp &kp &kp &kp             &kp &kp &kp &kp &kp &kp
				&trans  &kp &kp &kp &kp &kp             &kp &kp &kp &kp &kp &kp
				&trans  &kp &kp &kp &kp &kp &kp &to 3   &kp &kp &kp &kp &kp &kp
				&trans  &kp &kp &kp &kp &kp &kp &kp     &kp &kp &kp &kp &kp &kp
				&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &HOME  &PAGE_UP  &PAGE_DOWN  &END
			>;
		};

		layer_2 {		// 2
			bindings = <
				&to 0    &kp &kp &kp &kp &kp             &kp &kp &kp &kp &kp &kp
				&kp      &kp &kp &kp &kp &kp             &kp &kp &kp &kp &kp &kp
				&kp      &kp &kp &kp &kp &kp &kp &to 3   &kp &kp &kp &kp &kp &kp
				&kp      &kp &kp &kp &kp &kp &kp &kp     &kp &kp &kp &kp &kp &kp
				&trans  &trans  &trans  &trans   &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
			>;
		};

		mouse_bluetooth {		// 3

			&mkp_input_listener {
				input-processors = <&zip_temp_layer 2 2000>;
 			}

 			&mmv_input_listener {
 				input-processors = <&zip_temp_layer 2 2000>;
 			}

			bindings = <
				&to 0   &kp     &kp     &kp     &kp     &kp                     &kp       &kp              &kp           &kp             &kp              &kp
				&kp     &kp     &kp     &kp     &kp     &kp                     &mkp MB4  &mkp MB1         &mkp MB3      &mkp MB2        &mkp MB5         &kp
				&kp     &kp     &kp     &kp     &kp     &kp     &kp     &to     &kp       &mmv MOVE_LEFT   &mmv MOVE_UP  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &kp
				&kp     &kp     &kp     &kp     &kp     &kp     &kp     &kp     &kp       &msc SCRL_LEFT   &msc SCRL_UP  &msc SCRL_DOWN  &msc SCRL_RIGHT  &kp
				&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans           &trans        &trans          &trans           &trans
			>;
		};

	};
};